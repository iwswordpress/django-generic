# Generated by Django 4.1.5 on 2023-01-20 10:25

import django.core.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Run',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('run_name', models.CharField(default='RUN_NAME', max_length=100, validators=[django.core.validators.MinLengthValidator(3)])),
                ('project_id', models.PositiveIntegerField(default=0, verbose_name='analyst')),
                ('analyst_id', models.PositiveIntegerField(default=0, verbose_name='analyst')),
                ('purpose', models.CharField(max_length=300, validators=[django.core.validators.MinLengthValidator(3)])),
                ('conclusion', models.TextField(null=True, validators=[django.core.validators.MinLengthValidator(3)])),
                ('notebook_name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(3)])),
                ('notebook_location', models.CharField(default='LIBRARY', max_length=400, validators=[django.core.validators.MinLengthValidator(3)])),
                ('notebook_file', models.FileField(blank=True, null=True, upload_to='data/')),
                ('results', models.TextField(null=True, validators=[django.core.validators.MinLengthValidator(3)])),
                ('comments', models.TextField(null=True, validators=[django.core.validators.MinLengthValidator(3)])),
            ],
        ),
        migrations.CreateModel(
            name='TestData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_id', models.CharField(blank=True, max_length=100, null=True)),
                ('filename', models.CharField(blank=True, default='FILE_NAME', max_length=200, null=True)),
                ('model_type', models.CharField(blank=True, default='LOG', max_length=20, null=True)),
                ('run_num_hyper', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='random number hyper')),
                ('split', models.FloatField(blank=True, default=0.2, null=True)),
                ('rnd_num_split', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='random number split')),
                ('is_scaled', models.BooleanField(blank=True, default=True, null=True)),
                ('accuracy', models.FloatField(blank=True, default=0.0, null=True)),
            ],
        ),
    ]
